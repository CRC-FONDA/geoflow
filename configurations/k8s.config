directories {
    input_cube = "/input/datacube/**/*{BOA,QAI}.tif"
    lucas_survey = "/input/lucas/lucas_harmo_uf_2018.csv"
    lucas_geom = "/input/lucas/lucas_geom.gpkg"
    lucas_subset_dir = "/output/lucas/subset"
    final_outDir = "/output/classification"
}

process {
    container = 'floriankaterndahl/geoflow:v0.9.2'
    scratch = true
    executor = 'k8s'
    pod = [ [nodeSelector: 'geoflow=true'],
            [volumeClaim: 'ceph-input', mountPath: '/input'],
            [volumeClaim: 'ceph-workdir', mountPath: '/workdir'],
            [volumeClaim: 'ceph-output', mountPath: '/output'], ]
    cpus = 1
    //cache = false

    withLabel: miniscule_memory {
        errorStrategy = 'retry'
        maxRetries = 5
        memory = { 100.MB * task.attempt }
    }

    withLabel: small_memory {
        errorStrategy = 'retry'
        maxRetries = 5
        memory = { 1.GB * task.attempt }

    }

    withLabel: medium_memory {
        errorStrategy = { sleep(Math.pow(2, task.attempt) * 200 as long); return 'retry' }
        maxRetries = 5
        memory = 15.GB
    }
}

k8s {
    debug.yaml = true
    namespace = 'katerndahl'
    serviceAccount = 'nextflow'
    workDir = '/workdir/work'
    projectDir = '/workdir/project/'
    imagePullPolicy = 'IfNotPresent'
    launchDir = '/workdir/launch/'
    runAsUser = 0
    fetchNodeName = true
    queueSize = 300
    dsl2 = true
    name = 'geoflow-kubernetes'
}

report {
    file = '/output/meta/report.html'
}

dag {
    file = '/output/meta/dag.html'
}

trace {
    file = '/output/meta/trace.csv'
}
